{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Documents/dk/HackerNewsReactHooks/src/components/ResponsiveContainer/responsiveContainer.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ReactResizeDetector from 'react-resize-detector';\nimport _ from 'lodash';\nimport { warn } from './logUtils';\n\nclass ResponsiveContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateDimensionsImmediate = () => {\n      if (!this.mounted) {\n        return;\n      }\n\n      const newSize = this.getContainerSize();\n\n      if (newSize) {\n        const {\n          containerWidth: oldWidth,\n          containerHeight: oldHeight\n        } = this.state;\n        const {\n          containerWidth,\n          containerHeight\n        } = newSize;\n\n        if (containerWidth !== oldWidth || containerHeight !== oldHeight) {\n          this.setState({\n            containerWidth,\n            containerHeight\n          });\n        }\n      }\n    };\n\n    this.state = {\n      containerWidth: -1,\n      containerHeight: -1\n    };\n    this.handleResize = props.debounce > 0 ? _.debounce(this.updateDimensionsImmediate, props.debounce) : this.updateDimensionsImmediate;\n  }\n  /* eslint-disable  react/no-did-mount-set-state */\n\n\n  componentDidMount() {\n    this.mounted = true;\n    const size = this.getContainerSize();\n\n    if (size) {\n      this.setState(size);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getContainerSize() {\n    if (!this.container) {\n      return null;\n    }\n\n    return {\n      containerWidth: this.container.clientWidth,\n      containerHeight: this.container.clientHeight\n    };\n  }\n\n  renderChart() {\n    const {\n      containerWidth,\n      containerHeight\n    } = this.state;\n\n    if (containerWidth < 0 || containerHeight < 0) {\n      return null;\n    }\n\n    const {\n      aspect,\n      width,\n      height,\n      minWidth,\n      minHeight,\n      maxHeight,\n      children\n    } = this.props; // warn(isPercent(width) || isPercent(height),\n    //   `The width(%s) and height(%s) are both fixed numbers,\n    //    maybe you don't need to use a ResponsiveContainer.`,\n    //   width, height\n    // );\n\n    warn(!aspect || aspect > 0, 'The aspect(%s) must be greater than zero.', aspect);\n    let calculatedWidth = _.isString(width) && width.indexOf('%') === width.length - 1 ? containerWidth : width;\n    let calculatedHeight = _.isString(width) && width.indexOf('%') === width.length - 1 ? containerHeight : height;\n\n    if (aspect && aspect > 0) {\n      // Preserve the desired aspect ratio\n      if (calculatedWidth) {\n        // Will default to using width for aspect ratio\n        calculatedHeight = calculatedWidth / aspect;\n      } else if (calculatedHeight) {\n        // But we should also take height into consideration\n        calculatedWidth = calculatedHeight * aspect;\n      } // if maxHeight is set, overwrite if calculatedHeight is greater than maxHeight\n\n\n      if (maxHeight && calculatedHeight > maxHeight) {\n        calculatedHeight = maxHeight;\n      }\n    }\n\n    warn(calculatedWidth > 0 || calculatedHeight > 0, `The width(%s) and height(%s) of chart should be greater than 0,\n       please check the style of container, or the props width(%s) and height(%s),\n       or add a minWidth(%s) or minHeight(%s) or use aspect(%s) to control the\n       height and width.`, calculatedWidth, calculatedHeight, width, height, minWidth, minHeight, aspect);\n    return React.cloneElement(children, {\n      width: calculatedWidth,\n      height: calculatedHeight\n    });\n  }\n\n  render() {\n    const {\n      minWidth,\n      minHeight,\n      width,\n      height,\n      maxHeight,\n      id,\n      className\n    } = this.props;\n    const style = {\n      width,\n      height,\n      minWidth,\n      minHeight,\n      maxHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id,\n      className: classNames('recharts-responsive-container', className),\n      style: style,\n      ref: node => {\n        this.container = node;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, this.renderChart(), /*#__PURE__*/React.createElement(ReactResizeDetector, {\n      handleWidth: true,\n      handleHeight: true,\n      onResize: this.handleResize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nResponsiveContainer.displayName = 'ResponsiveContainer';\nResponsiveContainer.propTypes = {\n  aspect: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  minHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  minWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  maxHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  children: PropTypes.node.isRequired,\n  debounce: PropTypes.number,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nResponsiveContainer.defaultProps = {\n  width: '100%',\n  height: '100%',\n  debounce: 0\n};\nexport default ResponsiveContainer;","map":{"version":3,"sources":["/home/deepak/Documents/dk/HackerNewsReactHooks/src/components/ResponsiveContainer/responsiveContainer.js"],"names":["React","Component","PropTypes","classNames","ReactResizeDetector","_","warn","ResponsiveContainer","constructor","props","updateDimensionsImmediate","mounted","newSize","getContainerSize","containerWidth","oldWidth","containerHeight","oldHeight","state","setState","handleResize","debounce","componentDidMount","size","componentWillUnmount","container","clientWidth","clientHeight","renderChart","aspect","width","height","minWidth","minHeight","maxHeight","children","calculatedWidth","isString","indexOf","length","calculatedHeight","cloneElement","render","id","className","style","node","displayName","propTypes","number","oneOfType","string","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ReactResizeDetector from 'react-resize-detector';\nimport _ from 'lodash';\nimport {warn} from './logUtils';\n\nclass ResponsiveContainer extends Component {\n  static displayName = 'ResponsiveContainer';\n\n  static propTypes = {\n    aspect: PropTypes.number,\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    minHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    minWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    maxHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    children: PropTypes.node.isRequired,\n    debounce: PropTypes.number,\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  };\n\n  static defaultProps = {\n    width: '100%',\n    height: '100%',\n    debounce: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      containerWidth: -1,\n      containerHeight: -1,\n    };\n\n    this.handleResize = props.debounce > 0 ?\n      _.debounce(this.updateDimensionsImmediate, props.debounce) :\n      this.updateDimensionsImmediate;\n  }\n\n  /* eslint-disable  react/no-did-mount-set-state */\n  componentDidMount() {\n    this.mounted = true;\n\n    const size = this.getContainerSize();\n\n    if (size) {\n      this.setState(size);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getContainerSize() {\n    if (!this.container) { return null; }\n\n    return {\n      containerWidth: this.container.clientWidth,\n      containerHeight: this.container.clientHeight,\n    };\n  }\n\n  updateDimensionsImmediate = () => {\n    if (!this.mounted) { return; }\n\n    const newSize = this.getContainerSize();\n\n    if (newSize) {\n      const { containerWidth: oldWidth, containerHeight: oldHeight } = this.state;\n      const { containerWidth, containerHeight } = newSize;\n\n      if (containerWidth !== oldWidth || containerHeight !== oldHeight) {\n        this.setState({ containerWidth, containerHeight });\n      }\n    }\n  };\n\n  renderChart() {\n    const { containerWidth, containerHeight } = this.state;\n\n    if (containerWidth < 0 || containerHeight < 0) { return null; }\n\n    const { aspect, width, height, minWidth, minHeight, maxHeight, children } = this.props;\n\n    \n    // warn(isPercent(width) || isPercent(height),\n    //   `The width(%s) and height(%s) are both fixed numbers,\n    //    maybe you don't need to use a ResponsiveContainer.`,\n    //   width, height\n    // );\n\n    warn(!aspect || aspect > 0,\n      'The aspect(%s) must be greater than zero.',\n      aspect);\n\n    let calculatedWidth =   _.isString(width) && width.indexOf('%') === width.length - 1? containerWidth : width;\n    let calculatedHeight =   _.isString(width) && width.indexOf('%') === width.length - 1 ? containerHeight : height;\n\n  \n    if (aspect && aspect > 0) {\n      // Preserve the desired aspect ratio\n      if (calculatedWidth) {\n        // Will default to using width for aspect ratio\n        calculatedHeight = calculatedWidth / aspect;\n      } else if (calculatedHeight) {\n        // But we should also take height into consideration\n        calculatedWidth = calculatedHeight * aspect;\n      }\n\n      // if maxHeight is set, overwrite if calculatedHeight is greater than maxHeight\n      if (maxHeight && (calculatedHeight > maxHeight)) {\n        calculatedHeight = maxHeight;\n      }\n    }\n\n    warn(calculatedWidth > 0 || calculatedHeight > 0,\n      `The width(%s) and height(%s) of chart should be greater than 0,\n       please check the style of container, or the props width(%s) and height(%s),\n       or add a minWidth(%s) or minHeight(%s) or use aspect(%s) to control the\n       height and width.`,\n      calculatedWidth, calculatedHeight, width, height, minWidth, minHeight, aspect\n    );\n\n    return React.cloneElement(children, {\n      width: calculatedWidth,\n      height: calculatedHeight,\n    });\n\n  }\n\n  render() {\n    const { minWidth, minHeight, width, height, maxHeight, id, className } = this.props;\n    const style = { width, height, minWidth, minHeight, maxHeight };\n\n    return (\n      <div\n        id={id}\n        className={classNames('recharts-responsive-container', className)}\n        style={style}\n        ref={(node) => { this.container = node; }}\n      >\n        {this.renderChart()}\n        <ReactResizeDetector handleWidth handleHeight onResize={this.handleResize} />\n      </div>\n    );\n  }\n}\n\nexport default ResponsiveContainer;"]},"metadata":{},"sourceType":"module"}