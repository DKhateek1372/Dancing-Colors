{"ast":null,"code":"import { routerMiddleware } from 'connected-react-router';\nimport { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport storage from 'redux-persist/lib/storage';\nimport { createBrowserHistory } from 'history';\nimport { createRootReducer } from './combineReducers';\nimport rootSaga from './combineSagas';\nconst history = createBrowserHistory();\nconst persistConfig = {\n  key: 'root',\n  storage,\n  version: 1.12\n};\nconst middlewares = [];\nconst sagaMiddleware = createSagaMiddleware();\nmiddlewares.push(sagaMiddleware);\nmiddlewares.push(routerMiddleware(history));\nconst composeEnhancers = composeWithDevTools({});\nconst persistedReducer = persistReducer(persistConfig, createRootReducer(history));\nconst store = createStore(persistedReducer, {}, composeEnhancers(applyMiddleware(...middlewares)));\nsagaMiddleware.run(rootSaga);\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/home/deepak/Documents/dk/library-Management-System-HeadX/src/store/configureStore.js"],"names":["routerMiddleware","applyMiddleware","createStore","createSagaMiddleware","persistStore","persistReducer","composeWithDevTools","storage","createBrowserHistory","createRootReducer","rootSaga","history","persistConfig","key","version","middlewares","sagaMiddleware","push","composeEnhancers","persistedReducer","store","run","persistor"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,wBAAjC;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,MAAMC,OAAO,GAAGH,oBAAoB,EAApC;AAEA,MAAMI,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBN,EAAAA,OAFoB;AAGpBO,EAAAA,OAAO,EAAE;AAHW,CAAtB;AAMA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,cAAc,GAAGb,oBAAoB,EAA3C;AACAY,WAAW,CAACE,IAAZ,CAAiBD,cAAjB;AACAD,WAAW,CAACE,IAAZ,CAAiBjB,gBAAgB,CAACW,OAAD,CAAjC;AAEA,MAAMO,gBAAgB,GAAGZ,mBAAmB,CAAC,EAAD,CAA5C;AACA,MAAMa,gBAAgB,GAAGd,cAAc,CAACO,aAAD,EAAeH,iBAAiB,CAACE,OAAD,CAAhC,CAAvC;AACA,MAAMS,KAAK,GAAGlB,WAAW,CACvBiB,gBADuB,EAEvB,EAFuB,EAGvBD,gBAAgB,CAACjB,eAAe,CAAC,GAAGc,WAAJ,CAAhB,CAHO,CAAzB;AAKAC,cAAc,CAACK,GAAf,CAAmBX,QAAnB;AACA,MAAMY,SAAS,GAAGlB,YAAY,CAACgB,KAAD,CAA9B;AACA,SAAQA,KAAR,EAAeE,SAAf","sourcesContent":["import { routerMiddleware } from 'connected-react-router';\nimport { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport storage from 'redux-persist/lib/storage';\nimport { createBrowserHistory } from 'history';\nimport { createRootReducer } from './combineReducers';\nimport rootSaga from './combineSagas';\nconst history = createBrowserHistory();\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  version: 1.12,\n};\n\nconst middlewares = [];\nconst sagaMiddleware = createSagaMiddleware();\nmiddlewares.push(sagaMiddleware);\nmiddlewares.push(routerMiddleware(history));\n\nconst composeEnhancers = composeWithDevTools({});\nconst persistedReducer = persistReducer(persistConfig,createRootReducer(history));\nconst store = createStore(\n  persistedReducer,\n  {},\n  composeEnhancers(applyMiddleware(...middlewares))\n);\nsagaMiddleware.run(rootSaga);\nconst persistor = persistStore(store);\nexport {store, persistor};\n\n\n"]},"metadata":{},"sourceType":"module"}