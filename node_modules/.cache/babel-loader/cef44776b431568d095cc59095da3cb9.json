{"ast":null,"code":"import { call, all, put, takeLatest } from 'redux-saga/effects';\nimport api from '../../services/index';\nimport { libraryManagementAction } from './actions';\n\nfunction* handleFetchBookList(requets) {\n  const {\n    payload\n  } = requets;\n\n  try {\n    const response = yield call(api.getBooks, payload);\n    yield put(libraryManagementAction.fetchBooksDataSuccess(response.data));\n  } catch (error) {\n    yield put(libraryManagementAction.fetchBooksDataError(error));\n  }\n}\n\nfunction* handlefetchBookDetails(requets) {\n  const {\n    payload\n  } = requets;\n\n  try {\n    yield put(libraryManagementAction.fetchBookDetailsSuccess(payload));\n  } catch (err) {\n    yield put(libraryManagementAction.fetchBookDetailsError(err));\n  }\n}\n\nfunction* addBooksBorrowedRequest(requets) {\n  const {\n    payload\n  } = requets;\n\n  try {\n    yield put(libraryManagementAction.addBooksBorrowedSuccess(payload.data));\n  } catch (err) {\n    yield put(libraryManagementAction.addBooksBorrowedError(err));\n  }\n}\n\nfunction* handleUserBorrowedBooksList() {\n  try {\n    yield put(libraryManagementAction.userBorrowedBooksListSuccess());\n  } catch (err) {\n    yield put(libraryManagementAction.userBorrowedBooksListError(err));\n  }\n}\n\nexport function* libraryManagementSagas() {\n  yield all([yield takeLatest(libraryManagementAction.FETCH_BOOKS_DATA_REQUEST, handleFetchBookList), yield takeLatest(libraryManagementAction.FETCH_BOOKS_DETAILS_REQUEST, handlefetchBookDetails), yield takeLatest(libraryManagementAction.ADD_BOOKS_BORROWED_REQUEST, addBooksBorrowedRequest), yield takeLatest(libraryManagementAction.USER_BORROWED_BOOKS_LIST_REQUEST, handleUserBorrowedBooksList)]);\n}","map":{"version":3,"sources":["/home/deepak/Documents/dk/library-Management-System-HeadX/src/store/home/sagas.js"],"names":["call","all","put","takeLatest","api","libraryManagementAction","handleFetchBookList","requets","payload","response","getBooks","fetchBooksDataSuccess","data","error","fetchBooksDataError","handlefetchBookDetails","fetchBookDetailsSuccess","err","fetchBookDetailsError","addBooksBorrowedRequest","addBooksBorrowedSuccess","addBooksBorrowedError","handleUserBorrowedBooksList","userBorrowedBooksListSuccess","userBorrowedBooksListError","libraryManagementSagas","FETCH_BOOKS_DATA_REQUEST","FETCH_BOOKS_DETAILS_REQUEST","ADD_BOOKS_BORROWED_REQUEST","USER_BORROWED_BOOKS_LIST_REQUEST"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AAEA,SACEC,uBADF,QAEO,WAFP;;AAIA,UAAUC,mBAAV,CAA8BC,OAA9B,EAAuC;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,OAApB;;AACA,MAAI;AACF,UAAME,QAAQ,GAAG,MAAMT,IAAI,CAACI,GAAG,CAACM,QAAL,EAAeF,OAAf,CAA3B;AACA,UAAMN,GAAG,CAACG,uBAAuB,CAACM,qBAAxB,CAA8CF,QAAQ,CAACG,IAAvD,CAAD,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMX,GAAG,CAACG,uBAAuB,CAACS,mBAAxB,CAA4CD,KAA5C,CAAD,CAAT;AACD;AACF;;AAED,UAAUE,sBAAV,CAAiCR,OAAjC,EAA0C;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,OAApB;;AACA,MAAI;AACF,UAAML,GAAG,CAACG,uBAAuB,CAACW,uBAAxB,CAAgDR,OAAhD,CAAD,CAAT;AACD,GAFD,CAEE,OAAOS,GAAP,EAAY;AACZ,UAAMf,GAAG,CAACG,uBAAuB,CAACa,qBAAxB,CAA8CD,GAA9C,CAAD,CAAT;AACD;AACF;;AAED,UAAUE,uBAAV,CAAkCZ,OAAlC,EAA2C;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,OAApB;;AACD,MAAI;AACH,UAAML,GAAG,CAACG,uBAAuB,CAACe,uBAAxB,CAAgDZ,OAAO,CAACI,IAAxD,CAAD,CAAT;AACC,GAFF,CAEG,OAAOK,GAAP,EAAY;AACZ,UAAMf,GAAG,CAACG,uBAAuB,CAACgB,qBAAxB,CAA8CJ,GAA9C,CAAD,CAAT;AACD;AACF;;AAED,UAAUK,2BAAV,GAAwC;AACrC,MAAI;AACH,UAAMpB,GAAG,CAACG,uBAAuB,CAACkB,4BAAxB,EAAD,CAAT;AACD,GAFA,CAEC,OAAON,GAAP,EAAY;AACZ,UAAMf,GAAG,CAACG,uBAAuB,CAACmB,0BAAxB,CAAmDP,GAAnD,CAAD,CAAT;AACD;AACF;;AACD,OAAO,UAAUQ,sBAAV,GAAmC;AACxC,QAAMxB,GAAG,CAAC,CACR,MAAME,UAAU,CAACE,uBAAuB,CAACqB,wBAAzB,EAAmDpB,mBAAnD,CADR,EAER,MAAMH,UAAU,CAACE,uBAAuB,CAACsB,2BAAzB,EAAsDZ,sBAAtD,CAFR,EAGR,MAAMZ,UAAU,CAACE,uBAAuB,CAACuB,0BAAzB,EAAqDT,uBAArD,CAHR,EAIR,MAAMhB,UAAU,CAACE,uBAAuB,CAACwB,gCAAzB,EAA2DP,2BAA3D,CAJR,CAAD,CAAT;AAMD","sourcesContent":["import { call, all, put, takeLatest } from 'redux-saga/effects';\nimport api from '../../services/index';\n\nimport {\n  libraryManagementAction\n} from './actions';\n\nfunction* handleFetchBookList(requets) {\n  const { payload } = requets;\n  try {\n    const response = yield call(api.getBooks, payload);\n    yield put(libraryManagementAction.fetchBooksDataSuccess(response.data));\n  } catch (error) {\n    yield put(libraryManagementAction.fetchBooksDataError(error));\n  }\n}\n\nfunction* handlefetchBookDetails(requets) {\n  const { payload } = requets;\n  try {\n    yield put(libraryManagementAction.fetchBookDetailsSuccess(payload));\n  } catch (err) {\n    yield put(libraryManagementAction.fetchBookDetailsError(err));\n  }\n}\n\nfunction* addBooksBorrowedRequest(requets) {\n  const { payload } = requets;\n try {\n  yield put(libraryManagementAction.addBooksBorrowedSuccess(payload.data));\n  } catch (err) {\n    yield put(libraryManagementAction.addBooksBorrowedError(err));\n  }\n}\n\nfunction* handleUserBorrowedBooksList() {\n   try {\n    yield put(libraryManagementAction.userBorrowedBooksListSuccess());\n  } catch (err) {\n    yield put(libraryManagementAction.userBorrowedBooksListError(err));\n  }\n}\nexport function* libraryManagementSagas() {\n  yield all([\n    yield takeLatest(libraryManagementAction.FETCH_BOOKS_DATA_REQUEST, handleFetchBookList),\n    yield takeLatest(libraryManagementAction.FETCH_BOOKS_DETAILS_REQUEST, handlefetchBookDetails),\n    yield takeLatest(libraryManagementAction.ADD_BOOKS_BORROWED_REQUEST, addBooksBorrowedRequest),\n    yield takeLatest(libraryManagementAction.USER_BORROWED_BOOKS_LIST_REQUEST, handleUserBorrowedBooksList)\n  ]);\n}"]},"metadata":{},"sourceType":"module"}