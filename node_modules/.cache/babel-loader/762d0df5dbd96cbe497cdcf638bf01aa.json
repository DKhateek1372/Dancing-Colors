{"ast":null,"code":"import { libraryManagementAction } from './actions';\nconst initialState = {\n  loading: true,\n  libraryData: [],\n  borrowedBooks: []\n};\n\nconst libraryManagementReducer = (state = initialState, action) => {\n  // fecth initial data from search //\n  switch (action.type) {\n    case libraryManagementAction.FETCH_BOOKS_DATA_REQUEST:\n      {\n        return { ...state\n        };\n      }\n\n    case libraryManagementAction.FETCH_BOOKS_DATA_SUCCESS:\n      {\n        let data = Object.assign([], action.payload);\n        !!data && data.items.forEach((element, index) => {\n          element.key = index;\n        });\n        state.loading = false;\n        state.libraryData = data;\n        return state;\n      }\n    // update vote count //\n\n    case libraryManagementAction.FETCH_BOOKS_DETAILS_REQUEST:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case libraryManagementAction.FETCH_BOOKS_DETAILS_SUCCESS:\n      {\n        let data = Object.assign([], state.libraryData && state.libraryData.items);\n        let BookKey = action.payload.key;\n        const bookDetails = data.filter(data => data.key.toString().includes(BookKey));\n        state.loading = false;\n        state.libraryData = bookDetails;\n        return state;\n      }\n    // update Presist data in redux state//\n\n    case libraryManagementAction.FETCH_BOOKS_EMPTYLIST_REQUEST:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case libraryManagementAction.FETCH_BOOKS_EMPTYLIST_SUCCESS:\n      {\n        state.loading = false; // state.hackerNewsData = action.hackerNewsData;\n        // state.hackerNewsGraphData = action.hackerNewsData.hackerNewsGraphData;\n\n        return state;\n      }\n    // fecth user details //\n\n    case libraryManagementAction.USER_BORROWED_BOOKS_LIST_REQUEST:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case libraryManagementAction.USER_BORROWED_BOOKS_LIST_SUCCESS:\n      {\n        let myBooks = [];\n        let data = Object.assign([], state.libraryData && state.libraryData.items);\n        let BookKey = action.payload.key;\n        const bookDetails = data.filter(data => data.key.toString().includes(BookKey));\n        myBooks.concat(bookDetails);\n        const borrowedBooks = myBooks.length > 0 ? myBooks.splice(1, 0) : myBooks;\n        state.borrowedBooks = borrowedBooks;\n        state.loading = false;\n        return state;\n      }\n\n    case libraryManagementAction.FETCH_BOOKS_DATA_ERROR:\n    case libraryManagementAction.FETCH_BOOKS_DETAILS_ERROR:\n    case libraryManagementAction.FETCH_BOOKS_EMPTYLIST_ERROR:\n    case libraryManagementAction.USER_BORROWED_BOOKS_LIST_ERROR:\n      {\n        return { ...state,\n          loading: true,\n          errors: ''\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default libraryManagementReducer;","map":{"version":3,"sources":["/home/deepak/Documents/dk/HackerNewsReactHooks/src/store/home/reducer.js"],"names":["libraryManagementAction","initialState","loading","libraryData","borrowedBooks","libraryManagementReducer","state","action","type","FETCH_BOOKS_DATA_REQUEST","FETCH_BOOKS_DATA_SUCCESS","data","Object","assign","payload","items","forEach","element","index","key","FETCH_BOOKS_DETAILS_REQUEST","FETCH_BOOKS_DETAILS_SUCCESS","BookKey","bookDetails","filter","toString","includes","FETCH_BOOKS_EMPTYLIST_REQUEST","FETCH_BOOKS_EMPTYLIST_SUCCESS","USER_BORROWED_BOOKS_LIST_REQUEST","USER_BORROWED_BOOKS_LIST_SUCCESS","myBooks","concat","length","splice","FETCH_BOOKS_DATA_ERROR","FETCH_BOOKS_DETAILS_ERROR","FETCH_BOOKS_EMPTYLIST_ERROR","USER_BORROWED_BOOKS_LIST_ERROR","errors"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,WAAxC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAGnBC,EAAAA,aAAa,EAAE;AAHI,CAArB;;AAQA,MAAMC,wBAAwB,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAEjE;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,uBAAuB,CAACS,wBAA7B;AAAuD;AACrD,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;;AAED,SAAKN,uBAAuB,CAACU,wBAA7B;AAAuD;AACrD,YAAIC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,MAAM,CAACO,OAAzB,CAAX;AACA,SAAC,CAACH,IAAF,IAAUA,IAAI,CAACI,KAAL,CAAWC,OAAX,CAAmB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC/CD,UAAAA,OAAO,CAACE,GAAR,GAAcD,KAAd;AACD,SAFS,CAAV;AAGAZ,QAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,QAAAA,KAAK,CAACH,WAAN,GAAoBQ,IAApB;AACA,eAAOL,KAAP;AACD;AAED;;AACA,SAAKN,uBAAuB,CAACoB,2BAA7B;AAA0D;AACxD,eAAO,EAAE,GAAGd,KAAL;AAAYJ,UAAAA,OAAO,EAAE;AAArB,SAAP;AACD;;AACD,SAAKF,uBAAuB,CAACqB,2BAA7B;AAA0D;AACxD,YAAIV,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBP,KAAK,CAACH,WAAN,IAAoBG,KAAK,CAACH,WAAN,CAAkBY,KAAvD,CAAX;AACA,YAAIO,OAAO,GAAGf,MAAM,CAACO,OAAP,CAAeK,GAA7B;AACA,cAAMI,WAAW,GAAGZ,IAAI,CAACa,MAAL,CAAYb,IAAI,IAClCA,IAAI,CAACQ,GAAL,CAASM,QAAT,GAAoBC,QAApB,CAA6BJ,OAA7B,CADkB,CAApB;AAGAhB,QAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,QAAAA,KAAK,CAACH,WAAN,GAAmBoB,WAAnB;AACA,eAAOjB,KAAP;AACD;AAGD;;AACA,SAAKN,uBAAuB,CAAC2B,6BAA7B;AAA4D;AAC1D,eAAO,EAAE,GAAGrB,KAAL;AAAYJ,UAAAA,OAAO,EAAE;AAArB,SAAP;AACD;;AACD,SAAKF,uBAAuB,CAAC4B,6BAA7B;AAA4D;AAC1DtB,QAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB,CAD0D,CAE1D;AACA;;AACA,eAAOI,KAAP;AACD;AAID;;AACA,SAAKN,uBAAuB,CAAC6B,gCAA7B;AAA+D;AAC7D,eAAO,EAAE,GAAGvB,KAAL;AAAYJ,UAAAA,OAAO,EAAE;AAArB,SAAP;AACD;;AACD,SAAKF,uBAAuB,CAAC8B,gCAA7B;AAA+D;AAC7D,YAAIC,OAAO,GAAE,EAAb;AACA,YAAIpB,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBP,KAAK,CAACH,WAAN,IAAoBG,KAAK,CAACH,WAAN,CAAkBY,KAAvD,CAAX;AACA,YAAIO,OAAO,GAAGf,MAAM,CAACO,OAAP,CAAeK,GAA7B;AACA,cAAMI,WAAW,GAAGZ,IAAI,CAACa,MAAL,CAAYb,IAAI,IAClCA,IAAI,CAACQ,GAAL,CAASM,QAAT,GAAoBC,QAApB,CAA6BJ,OAA7B,CADkB,CAApB;AAGAS,QAAAA,OAAO,CAACC,MAAR,CAAeT,WAAf;AACA,cAAMnB,aAAa,GAAI2B,OAAO,CAACE,MAAR,GAAiB,CAAjB,GAAqBF,OAAO,CAACG,MAAR,CAAe,CAAf,EAAkB,CAAlB,CAArB,GAA2CH,OAAlE;AACAzB,QAAAA,KAAK,CAACF,aAAN,GAAsBA,aAAtB;AACAE,QAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACA,eAAOI,KAAP;AACD;;AAGD,SAAKN,uBAAuB,CAACmC,sBAA7B;AACA,SAAKnC,uBAAuB,CAACoC,yBAA7B;AACA,SAAKpC,uBAAuB,CAACqC,2BAA7B;AACA,SAAKrC,uBAAuB,CAACsC,8BAA7B;AACE;AACE,eAAO,EACL,GAAGhC,KADE;AAELJ,UAAAA,OAAO,EAAE,IAFJ;AAGLqC,UAAAA,MAAM,EAAE;AAHH,SAAP;AAKD;;AACH;AACE,aAAOjC,KAAP;AA3EJ;AA6ED,CAhFD;;AAkFA,eAAeD,wBAAf","sourcesContent":["import { libraryManagementAction } from './actions';\n\nconst initialState = {\n  loading: true,\n  libraryData: [],\n  borrowedBooks: []\n};\n\n\n\nconst libraryManagementReducer = (state = initialState, action) => {\n\n  // fecth initial data from search //\n  switch (action.type) {\n    case libraryManagementAction.FETCH_BOOKS_DATA_REQUEST: {\n      return { ...state };\n    }\n\n    case libraryManagementAction.FETCH_BOOKS_DATA_SUCCESS: {\n      let data = Object.assign([], action.payload);\n      !!data && data.items.forEach((element, index) => {\n        element.key = index;\n      });\n      state.loading = false;\n      state.libraryData = data;\n      return state;\n    }\n\n    // update vote count //\n    case libraryManagementAction.FETCH_BOOKS_DETAILS_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case libraryManagementAction.FETCH_BOOKS_DETAILS_SUCCESS: {\n      let data = Object.assign([],state.libraryData &&state.libraryData.items  );\n      let BookKey = action.payload.key;\n      const bookDetails = data.filter(data =>\n        data.key.toString().includes(BookKey)\n      );\n      state.loading = false;\n      state.libraryData= bookDetails;\n      return state;\n    }\n\n\n    // update Presist data in redux state//\n    case libraryManagementAction.FETCH_BOOKS_EMPTYLIST_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case libraryManagementAction.FETCH_BOOKS_EMPTYLIST_SUCCESS: {\n      state.loading = false;\n      // state.hackerNewsData = action.hackerNewsData;\n      // state.hackerNewsGraphData = action.hackerNewsData.hackerNewsGraphData;\n      return state;\n    }\n\n\n\n    // fecth user details //\n    case libraryManagementAction.USER_BORROWED_BOOKS_LIST_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case libraryManagementAction.USER_BORROWED_BOOKS_LIST_SUCCESS: {\n      let myBooks =[];\n      let data = Object.assign([],state.libraryData &&state.libraryData.items  );\n      let BookKey = action.payload.key;\n      const bookDetails = data.filter(data =>\n        data.key.toString().includes(BookKey)\n      );\n      myBooks.concat(bookDetails);\n      const borrowedBooks =  myBooks.length > 0 ? myBooks.splice(1, 0): myBooks\n      state.borrowedBooks = borrowedBooks;\n      state.loading = false;\n      return state;\n    }\n\n\n    case libraryManagementAction.FETCH_BOOKS_DATA_ERROR:\n    case libraryManagementAction.FETCH_BOOKS_DETAILS_ERROR:\n    case libraryManagementAction.FETCH_BOOKS_EMPTYLIST_ERROR:\n    case libraryManagementAction.USER_BORROWED_BOOKS_LIST_ERROR:\n      {\n        return {\n          ...state,\n          loading: true,\n          errors: ''\n        };\n      }\n    default:\n      return state;\n  }\n};\n\nexport default libraryManagementReducer;\n"]},"metadata":{},"sourceType":"module"}