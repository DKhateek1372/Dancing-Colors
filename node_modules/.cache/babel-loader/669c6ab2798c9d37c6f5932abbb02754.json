{"ast":null,"code":"import { libraryManagementAction } from './actions';\nconst initialState = {\n  loading: true,\n  libraryData: [],\n  borrowedBooks: []\n};\n\nconst libraryManagementReducer = (state = initialState, action) => {\n  console.log(\"@83495637856378453\", action, state); // fecth initial data from search //\n\n  switch (action.type) {\n    case libraryManagementAction.FETCH_BOOKS_DATA_REQUEST:\n      {\n        return { ...state\n        };\n      }\n\n    case libraryManagementAction.FETCH_BOOKS_DATA_SUCCESS:\n      {\n        let data = Object.assign([], action.payload);\n        !!data && data.items.forEach((element, index) => {\n          element.key = index;\n        });\n        state.loading = false;\n        state.libraryData = data;\n        return state;\n      }\n    // update vote count //\n\n    case libraryManagementAction.FETCH_BOOKS_DETAILS_REQUEST:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case libraryManagementAction.FETCH_BOOKS_DETAILS_SUCCESS:\n      {\n        state.loading = false;\n        return state;\n      }\n    // update Presist data in redux state//\n\n    case libraryManagementAction.FETCH_BOOKS_EMPTYLIST_REQUEST:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case libraryManagementAction.FETCH_BOOKS_EMPTYLIST_SUCCESS:\n      {\n        state.loading = false; // state.hackerNewsData = action.hackerNewsData;\n        // state.hackerNewsGraphData = action.hackerNewsData.hackerNewsGraphData;\n\n        return state;\n      }\n    // fecth user details //\n\n    case libraryManagementAction.USER_BORROWED_BOOKS_LIST_REQUEST:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case libraryManagementAction.USER_BORROWED_BOOKS_LIST_SUCCESS:\n      {\n        state.loading = false;\n        return state;\n      }\n\n    case libraryManagementAction.FETCH_BOOKS_DATA_ERROR:\n    case libraryManagementAction.FETCH_BOOKS_DETAILS_ERROR:\n    case libraryManagementAction.FETCH_BOOKS_EMPTYLIST_ERROR:\n    case libraryManagementAction.USER_BORROWED_BOOKS_LIST_ERROR:\n      {\n        return { ...state,\n          loading: true,\n          errors: ''\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default libraryManagementReducer;","map":{"version":3,"sources":["/home/deepak/Documents/dk/HackerNewsReactHooks/src/store/home/reducer.js"],"names":["libraryManagementAction","initialState","loading","libraryData","borrowedBooks","libraryManagementReducer","state","action","console","log","type","FETCH_BOOKS_DATA_REQUEST","FETCH_BOOKS_DATA_SUCCESS","data","Object","assign","payload","items","forEach","element","index","key","FETCH_BOOKS_DETAILS_REQUEST","FETCH_BOOKS_DETAILS_SUCCESS","FETCH_BOOKS_EMPTYLIST_REQUEST","FETCH_BOOKS_EMPTYLIST_SUCCESS","USER_BORROWED_BOOKS_LIST_REQUEST","USER_BORROWED_BOOKS_LIST_SUCCESS","FETCH_BOOKS_DATA_ERROR","FETCH_BOOKS_DETAILS_ERROR","FETCH_BOOKS_EMPTYLIST_ERROR","USER_BORROWED_BOOKS_LIST_ERROR","errors"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,WAAxC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAGnBC,EAAAA,aAAa,EAAE;AAHI,CAArB;;AAQA,MAAMC,wBAAwB,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACjEC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,MAAlC,EAA0CD,KAA1C,EADiE,CAEjE;;AACA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAKV,uBAAuB,CAACW,wBAA7B;AAAuD;AACrD,eAAO,EAAE,GAAGL;AAAL,SAAP;AACD;;AAED,SAAKN,uBAAuB,CAACY,wBAA7B;AAAuD;AACrD,YAAIC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,MAAM,CAACS,OAAzB,CAAX;AACA,SAAC,CAACH,IAAF,IAAUA,IAAI,CAACI,KAAL,CAAWC,OAAX,CAAmB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC/CD,UAAAA,OAAO,CAACE,GAAR,GAAcD,KAAd;AACD,SAFS,CAAV;AAGAd,QAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,QAAAA,KAAK,CAACH,WAAN,GAAoBU,IAApB;AACA,eAAOP,KAAP;AACD;AAED;;AACA,SAAKN,uBAAuB,CAACsB,2BAA7B;AAA0D;AACxD,eAAO,EAAE,GAAGhB,KAAL;AAAYJ,UAAAA,OAAO,EAAE;AAArB,SAAP;AACD;;AACD,SAAKF,uBAAuB,CAACuB,2BAA7B;AAA0D;AACxDjB,QAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACA,eAAOI,KAAP;AACD;AAGD;;AACA,SAAKN,uBAAuB,CAACwB,6BAA7B;AAA4D;AAC1D,eAAO,EAAE,GAAGlB,KAAL;AAAYJ,UAAAA,OAAO,EAAE;AAArB,SAAP;AACD;;AACD,SAAKF,uBAAuB,CAACyB,6BAA7B;AAA4D;AAC1DnB,QAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB,CAD0D,CAE1D;AACA;;AACA,eAAOI,KAAP;AACD;AAID;;AACA,SAAKN,uBAAuB,CAAC0B,gCAA7B;AAA+D;AAC7D,eAAO,EAAE,GAAGpB,KAAL;AAAYJ,UAAAA,OAAO,EAAE;AAArB,SAAP;AACD;;AACD,SAAKF,uBAAuB,CAAC2B,gCAA7B;AAA+D;AAC7DrB,QAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACA,eAAOI,KAAP;AACD;;AAGD,SAAKN,uBAAuB,CAAC4B,sBAA7B;AACA,SAAK5B,uBAAuB,CAAC6B,yBAA7B;AACA,SAAK7B,uBAAuB,CAAC8B,2BAA7B;AACA,SAAK9B,uBAAuB,CAAC+B,8BAA7B;AACE;AACE,eAAO,EACL,GAAGzB,KADE;AAELJ,UAAAA,OAAO,EAAE,IAFJ;AAGL8B,UAAAA,MAAM,EAAE;AAHH,SAAP;AAKD;;AACH;AACE,aAAO1B,KAAP;AA5DJ;AA8DD,CAjED;;AAmEA,eAAeD,wBAAf","sourcesContent":["import { libraryManagementAction } from './actions';\n\nconst initialState = {\n  loading: true,\n  libraryData: [],\n  borrowedBooks: []\n};\n\n\n\nconst libraryManagementReducer = (state = initialState, action) => {\n  console.log(\"@83495637856378453\", action, state);\n  // fecth initial data from search //\n  switch (action.type) {\n    case libraryManagementAction.FETCH_BOOKS_DATA_REQUEST: {\n      return { ...state };\n    }\n\n    case libraryManagementAction.FETCH_BOOKS_DATA_SUCCESS: {\n      let data = Object.assign([], action.payload);\n      !!data && data.items.forEach((element, index) => {\n        element.key = index;\n      });\n      state.loading = false;\n      state.libraryData = data;\n      return state;\n    }\n\n    // update vote count //\n    case libraryManagementAction.FETCH_BOOKS_DETAILS_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case libraryManagementAction.FETCH_BOOKS_DETAILS_SUCCESS: {\n      state.loading = false;\n      return state;\n    }\n\n\n    // update Presist data in redux state//\n    case libraryManagementAction.FETCH_BOOKS_EMPTYLIST_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case libraryManagementAction.FETCH_BOOKS_EMPTYLIST_SUCCESS: {\n      state.loading = false;\n      // state.hackerNewsData = action.hackerNewsData;\n      // state.hackerNewsGraphData = action.hackerNewsData.hackerNewsGraphData;\n      return state;\n    }\n\n\n\n    // fecth user details //\n    case libraryManagementAction.USER_BORROWED_BOOKS_LIST_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case libraryManagementAction.USER_BORROWED_BOOKS_LIST_SUCCESS: {\n      state.loading = false;\n      return state;\n    }\n\n\n    case libraryManagementAction.FETCH_BOOKS_DATA_ERROR:\n    case libraryManagementAction.FETCH_BOOKS_DETAILS_ERROR:\n    case libraryManagementAction.FETCH_BOOKS_EMPTYLIST_ERROR:\n    case libraryManagementAction.USER_BORROWED_BOOKS_LIST_ERROR:\n      {\n        return {\n          ...state,\n          loading: true,\n          errors: ''\n        };\n      }\n    default:\n      return state;\n  }\n};\n\nexport default libraryManagementReducer;\n"]},"metadata":{},"sourceType":"module"}