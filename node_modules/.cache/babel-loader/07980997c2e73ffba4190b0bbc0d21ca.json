{"ast":null,"code":"import axios from 'axios'; // Default API will be your root\n// const baseURL = process.env.URL;\n\nconst api_key = 'here your api key will come';\n\nclass Api {\n  static headers(headersparams) {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'x-api-key': api_key,\n      ...headersparams\n    };\n  }\n\n  static get(route, key = null) {\n    return this.request(route, null, 'GET', key);\n  }\n\n  static put(route, params, key = null) {\n    return this.request(route, params, 'PUT', key);\n  }\n\n  static post(route, params, key) {\n    return this.request(route, params, 'POST', key);\n  }\n\n  static delete(route, params, key = null) {\n    return this.request(route, params, 'DELETE', key);\n  }\n\n  static patch(route, params, key = null) {\n    return this.request(route, params, 'PATCH', key);\n  }\n\n  static request(route, params, verb, key) {\n    if (!!route.match('https://')) {\n      const url = `${route}`;\n      const options = {\n        method: verb,\n        params\n      };\n      return axios(url, options);\n    } else {\n      // const host = baseURL;\n      // const url = `${host}${route}`;\n      const url = `${route}`;\n      const options = {\n        method: verb,\n        data: params\n      };\n      let keys = { ...key,\n        Authorization: localStorage.getItem('Authorization')\n      };\n      options.headers = Api.headers(keys);\n      return axios(url);\n    }\n  }\n\n}\n\nexport default Api;","map":{"version":3,"sources":["/home/deepak/Documents/dk/DancingColors-Cogknit/src/services/api_config.js"],"names":["axios","api_key","Api","headers","headersparams","Accept","get","route","key","request","put","params","post","delete","patch","verb","match","url","options","method","data","keys","Authorization","localStorage","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AAEA,MAAMC,OAAO,GAAE,6BAAf;;AAEA,MAAMC,GAAN,CAAU;AACN,SAAOC,OAAP,CAAeC,aAAf,EAA8B;AAC1B,WAAO;AACHC,MAAAA,MAAM,EAAE,kBADL;AAEH,sBAAgB,kBAFb;AAGH,mBAAaJ,OAHV;AAIH,SAAGG;AAJA,KAAP;AAMH;;AACD,SAAOE,GAAP,CAAWC,KAAX,EAAkBC,GAAG,GAAG,IAAxB,EAA8B;AAC1B,WAAO,KAAKC,OAAL,CAAaF,KAAb,EAAoB,IAApB,EAA0B,KAA1B,EAAiCC,GAAjC,CAAP;AACH;;AAED,SAAOE,GAAP,CAAWH,KAAX,EAAkBI,MAAlB,EAA0BH,GAAG,GAAG,IAAhC,EAAsC;AAClC,WAAO,KAAKC,OAAL,CAAaF,KAAb,EAAoBI,MAApB,EAA4B,KAA5B,EAAmCH,GAAnC,CAAP;AACH;;AAED,SAAOI,IAAP,CAAYL,KAAZ,EAAmBI,MAAnB,EAA2BH,GAA3B,EAAgC;AAC5B,WAAO,KAAKC,OAAL,CAAaF,KAAb,EAAoBI,MAApB,EAA4B,MAA5B,EAAoCH,GAApC,CAAP;AACH;;AAED,SAAOK,MAAP,CAAcN,KAAd,EAAqBI,MAArB,EAA6BH,GAAG,GAAG,IAAnC,EAAyC;AACrC,WAAO,KAAKC,OAAL,CAAaF,KAAb,EAAoBI,MAApB,EAA4B,QAA5B,EAAsCH,GAAtC,CAAP;AACH;;AAED,SAAOM,KAAP,CAAaP,KAAb,EAAoBI,MAApB,EAA4BH,GAAG,GAAG,IAAlC,EAAwC;AACpC,WAAO,KAAKC,OAAL,CAAaF,KAAb,EAAoBI,MAApB,EAA4B,OAA5B,EAAqCH,GAArC,CAAP;AACH;;AAED,SAAOC,OAAP,CAAeF,KAAf,EAAsBI,MAAtB,EAA8BI,IAA9B,EAAoCP,GAApC,EAAyC;AACrC,QAAI,CAAC,CAACD,KAAK,CAACS,KAAN,CAAY,UAAZ,CAAN,EAA+B;AAC3B,YAAMC,GAAG,GAAI,GAAEV,KAAM,EAArB;AACA,YAAMW,OAAO,GAAG;AAAEC,QAAAA,MAAM,EAAEJ,IAAV;AAAgBJ,QAAAA;AAAhB,OAAhB;AACA,aAAOX,KAAK,CAACiB,GAAD,EAAMC,OAAN,CAAZ;AACH,KAJD,MAIO;AACH;AACA;AACA,YAAMD,GAAG,GAAI,GAAEV,KAAM,EAArB;AACA,YAAMW,OAAO,GAAG;AAAEC,QAAAA,MAAM,EAAEJ,IAAV;AAAgBK,QAAAA,IAAI,EAAET;AAAtB,OAAhB;AACA,UAAIU,IAAI,GAAG,EAAE,GAAGb,GAAL;AAAUc,QAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,eAArB;AAAzB,OAAX;AACAN,MAAAA,OAAO,CAACf,OAAR,GAAkBD,GAAG,CAACC,OAAJ,CAAYkB,IAAZ,CAAlB;AACA,aAAOrB,KAAK,CAACiB,GAAD,CAAZ;AACH;AACJ;;AA3CK;;AA6CV,eAAef,GAAf","sourcesContent":["import axios from 'axios';\n\n// Default API will be your root\n// const baseURL = process.env.URL;\n\nconst api_key= 'here your api key will come'\n\nclass Api {\n    static headers(headersparams) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'x-api-key': api_key,\n            ...headersparams,\n        };\n    }\n    static get(route, key = null) {\n        return this.request(route, null, 'GET', key);\n    }\n\n    static put(route, params, key = null) {\n        return this.request(route, params, 'PUT', key);\n    }\n\n    static post(route, params, key) {\n        return this.request(route, params, 'POST', key);\n    }\n\n    static delete(route, params, key = null) {\n        return this.request(route, params, 'DELETE', key);\n    }\n\n    static patch(route, params, key = null) {\n        return this.request(route, params, 'PATCH', key);\n    }\n\n    static request(route, params, verb, key) {\n        if (!!route.match('https://')) {\n            const url = `${route}`;\n            const options = { method: verb, params };\n            return axios(url, options);\n        } else {\n            // const host = baseURL;\n            // const url = `${host}${route}`;\n            const url = `${route}`;\n            const options = { method: verb, data: params };\n            let keys = { ...key, Authorization: localStorage.getItem('Authorization') };\n            options.headers = Api.headers(keys);\n            return axios(url);\n        }\n    }\n}\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}