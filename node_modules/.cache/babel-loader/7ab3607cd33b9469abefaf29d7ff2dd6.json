{"ast":null,"code":"import { hackerNewsActionTypes, hackerNewsUserActionTypes, hackerNewsVoteCountActionTypes, hackerNewsDeleteActionTypes, hackerNewsUpdatePresistTypes } from '../constants'; // export named actions\n\nexport const fetchDataRequest = params => {\n  console.log('hye you you are getting params?', params);\n  return {\n    type: hackerNewsActionTypes.FETCH_DATA_REQUEST,\n    payload: params\n  };\n};\nexport const fetchDataSuccess = data => {\n  console.log('how many times i am calling for data?', data);\n  return {\n    type: hackerNewsActionTypes.FETCH_DATA_SUCCESS,\n    payload: data\n  };\n};\nexport const fetchDataError = message => ({\n  type: hackerNewsActionTypes.FETCH_DATA_ERROR,\n  payload: message\n});\nexport const fetchUserRequest = params => ({\n  type: hackerNewsUserActionTypes.FETCH_USER_REQUEST,\n  payload: params\n});\nexport const fetchUserSuccess = data => ({\n  type: hackerNewsUserActionTypes.FETCH_USER_SUCCESS,\n  payload: data\n});\nexport const fetchUserError = message => ({\n  type: hackerNewsUserActionTypes.FETCH_USER_ERROR,\n  payload: message\n});\nexport const updateVoteCountRequest = params => ({\n  type: hackerNewsVoteCountActionTypes.UPDATE_VOTE_COUNT_REQUEST,\n  payload: params\n});\nexport const updateVoteCountSuccess = data => ({\n  type: hackerNewsVoteCountActionTypes.UPDATE_VOTE_COUNT_SUCCESS,\n  payload: data\n});\nexport const updateVoteCountError = message => ({\n  type: hackerNewsVoteCountActionTypes.UPDATE_VOTE_COUNT_ERROR,\n  payload: message\n});\nexport const deletehackerNewDataRequest = params => ({\n  type: hackerNewsDeleteActionTypes.HACKER_NEWS_DELETE_DATA_REQUEST,\n  payload: params\n});\nexport const deletehackerNewDataSuccess = data => ({\n  type: hackerNewsDeleteActionTypes.HACKER_NEWS_DELETE_DATA_SUCCESS,\n  payload: data\n});\nexport const deletehackerNewDataError = message => ({\n  type: hackerNewsDeleteActionTypes.HACKER_NEWS_DELETE_DATA_ERROR,\n  payload: message\n});\nexport const updatePresistDataRequest = params => ({\n  type: hackerNewsUpdatePresistTypes.HACKER_NEWS_PERSIST_DATA_REQUEST,\n  payload: params\n});\nexport const updatePresistDataSuccess = data => ({\n  type: hackerNewsUpdatePresistTypes.HACKER_NEWS_PERSIST_DATA_SUCCESS,\n  payload: data\n});\nexport const updatePresistDataError = message => ({\n  type: hackerNewsUpdatePresistTypes.HACKER_NEWS_PERSIST_DATA_ERROR,\n  payload: message\n});","map":{"version":3,"sources":["/home/deepak/Documents/dk/HackerNewsReactHooks/src/store/home/actions.js"],"names":["hackerNewsActionTypes","hackerNewsUserActionTypes","hackerNewsVoteCountActionTypes","hackerNewsDeleteActionTypes","hackerNewsUpdatePresistTypes","fetchDataRequest","params","console","log","type","FETCH_DATA_REQUEST","payload","fetchDataSuccess","data","FETCH_DATA_SUCCESS","fetchDataError","message","FETCH_DATA_ERROR","fetchUserRequest","FETCH_USER_REQUEST","fetchUserSuccess","FETCH_USER_SUCCESS","fetchUserError","FETCH_USER_ERROR","updateVoteCountRequest","UPDATE_VOTE_COUNT_REQUEST","updateVoteCountSuccess","UPDATE_VOTE_COUNT_SUCCESS","updateVoteCountError","UPDATE_VOTE_COUNT_ERROR","deletehackerNewDataRequest","HACKER_NEWS_DELETE_DATA_REQUEST","deletehackerNewDataSuccess","HACKER_NEWS_DELETE_DATA_SUCCESS","deletehackerNewDataError","HACKER_NEWS_DELETE_DATA_ERROR","updatePresistDataRequest","HACKER_NEWS_PERSIST_DATA_REQUEST","updatePresistDataSuccess","HACKER_NEWS_PERSIST_DATA_SUCCESS","updatePresistDataError","HACKER_NEWS_PERSIST_DATA_ERROR"],"mappings":"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","sourcesContent":["import { hackerNewsActionTypes, hackerNewsUserActionTypes, hackerNewsVoteCountActionTypes, hackerNewsDeleteActionTypes, hackerNewsUpdatePresistTypes } from '../constants';\n\n// export named actions\nexport const fetchDataRequest = params => {\n    console.log('hye you you are getting params?', params);\n    return { \n        type: hackerNewsActionTypes.FETCH_DATA_REQUEST, \n        payload: params \n     }; \n}\n\nexport const fetchDataSuccess = data =>\n{\n    console.log('how many times i am calling for data?', data);\n    return { \n        type: hackerNewsActionTypes.FETCH_DATA_SUCCESS, \n        payload: data \n     }; \n}\n\nexport const fetchDataError = message => ({ \n    type: hackerNewsActionTypes.FETCH_DATA_ERROR,\n    payload: message \n});\n\nexport const fetchUserRequest = params => \n ({ \n     type: hackerNewsUserActionTypes.FETCH_USER_REQUEST, \n     payload: params \n });\nexport const fetchUserSuccess = data => \n({ \n    type: hackerNewsUserActionTypes.FETCH_USER_SUCCESS,\n    payload: data \n});\nexport const fetchUserError = message => ({ \n    type: hackerNewsUserActionTypes.FETCH_USER_ERROR,\n    payload: message \n});\n\n\nexport const updateVoteCountRequest = params => \n ({ \n     type: hackerNewsVoteCountActionTypes.UPDATE_VOTE_COUNT_REQUEST, \n     payload: params \n });\nexport const updateVoteCountSuccess = data => \n({ \n    type: hackerNewsVoteCountActionTypes.UPDATE_VOTE_COUNT_SUCCESS,\n    payload: data \n});\nexport const updateVoteCountError = message => ({ \n    type: hackerNewsVoteCountActionTypes.UPDATE_VOTE_COUNT_ERROR,\n    payload: message \n});\n\n\nexport const deletehackerNewDataRequest = params => \n ({ \n     type: hackerNewsDeleteActionTypes.HACKER_NEWS_DELETE_DATA_REQUEST, \n     payload: params \n });\nexport const deletehackerNewDataSuccess = data => \n({ \n    type: hackerNewsDeleteActionTypes.HACKER_NEWS_DELETE_DATA_SUCCESS,\n    payload: data \n});\nexport const deletehackerNewDataError = message => ({ \n    type: hackerNewsDeleteActionTypes.HACKER_NEWS_DELETE_DATA_ERROR,\n    payload: message \n});\n\n\n\nexport const updatePresistDataRequest = params => \n ({ \n     type: hackerNewsUpdatePresistTypes.HACKER_NEWS_PERSIST_DATA_REQUEST, \n     payload: params \n });\nexport const updatePresistDataSuccess = data => \n({ \n    type: hackerNewsUpdatePresistTypes.HACKER_NEWS_PERSIST_DATA_SUCCESS,\n    payload: data \n});\nexport const updatePresistDataError = message => ({ \n    type: hackerNewsUpdatePresistTypes.HACKER_NEWS_PERSIST_DATA_ERROR,\n    payload: message \n});\n\n"]},"metadata":{},"sourceType":"module"}