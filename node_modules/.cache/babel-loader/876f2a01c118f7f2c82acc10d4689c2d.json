{"ast":null,"code":"const isDev = process.env.NODE_ENV !== 'production';\nexport const warn = (condition, format, a, b, c, d, e, f) => {\n  if (isDev && typeof console !== 'undefined' && console.warn) {\n    if (format === undefined) {\n      console.warn('LogUtils requires an error message argument');\n    }\n\n    if (!condition) {\n      if (format === undefined) {\n        console.warn('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n      } else {\n        const args = [a, b, c, d, e, f];\n        let argIndex = 0;\n        console.warn(format.replace(/%s/g, () => args[argIndex++]));\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/home/deepak/Documents/dk/HackerNewsReactHooks/src/components/ResponsiveContainer/logUtils.js"],"names":["isDev","process","env","NODE_ENV","warn","condition","format","a","b","c","d","e","f","console","undefined","args","argIndex","replace"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAvC;AAEA,OAAO,MAAMC,IAAI,GAAG,CAACC,SAAD,EAAYC,MAAZ,EAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,CAA1B,EAA6BC,CAA7B,EAAgCC,CAAhC,EAAmCC,CAAnC,KAAyC;AAC3D,MAAIZ,KAAK,IAAI,OAAOa,OAAP,KAAmB,WAA5B,IAA2CA,OAAO,CAACT,IAAvD,EAA6D;AAC3D,QAAIE,MAAM,KAAKQ,SAAf,EAA0B;AACxBD,MAAAA,OAAO,CAACT,IAAR,CAAa,6CAAb;AACD;;AAED,QAAI,CAACC,SAAL,EAAgB;AACd,UAAIC,MAAM,KAAKQ,SAAf,EAA0B;AACxBD,QAAAA,OAAO,CAACT,IAAR,CACE,uEACA,6DAFF;AAID,OALD,MAKO;AACL,cAAMW,IAAI,GAAG,CAACR,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,CAAb;AACA,YAAII,QAAQ,GAAG,CAAf;AAEAH,QAAAA,OAAO,CAACT,IAAR,CAAaE,MAAM,CAACW,OAAP,CAAe,KAAf,EAAsB,MAAMF,IAAI,CAACC,QAAQ,EAAT,CAAhC,CAAb;AACD;AACF;AACF;AACF,CApBM","sourcesContent":["const isDev = process.env.NODE_ENV !== 'production';\n\nexport const warn = (condition, format, a, b, c, d, e, f) => {\n  if (isDev && typeof console !== 'undefined' && console.warn) {\n    if (format === undefined) {\n      console.warn('LogUtils requires an error message argument');\n    }\n\n    if (!condition) {\n      if (format === undefined) {\n        console.warn(\n          'Minified exception occurred; use the non-minified dev environment ' +\n          'for the full error message and additional helpful warnings.'\n        );\n      } else {\n        const args = [a, b, c, d, e, f];\n        let argIndex = 0;\n\n        console.warn(format.replace(/%s/g, () => args[argIndex++]));\n      }\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}