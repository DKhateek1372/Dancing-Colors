{"ast":null,"code":"import { hackerNewsActionTypes, hackerNewsUserActionTypes, hackerNewsVoteCountActionTypes, hackerNewsDeleteActionTypes, hackerNewsUpdatePresistTypes } from '../constants';\nconst initialState = {\n  loading: true,\n  hackerNewsData: {},\n  hackerNewsGraphData: []\n};\n\nconst hackerNewsReducer = (state = initialState, action) => {\n  // fecth initial data from search //\n  switch (action.type) {\n    case hackerNewsActionTypes.FETCH_DATA_REQUEST:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case hackerNewsActionTypes.FETCH_DATA_SUCCESS:\n      {\n        state.loading = false;\n        state.hackerNewsData = action.data;\n        state.hackerNewsGraphData = action.data.hackerNewsGraphData;\n        return state;\n      }\n\n    case hackerNewsActionTypes.FETCH_DATA_ERROR:\n      {\n        return { ...state,\n          loading: true,\n          errors: ''\n        };\n      }\n    // update vote count //\n\n    case hackerNewsVoteCountActionTypes.UPDATE_VOTE_COUNT_REQUEST:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case hackerNewsVoteCountActionTypes.UPDATE_VOTE_COUNT_SUCCESS:\n      {\n        state.loading = false;\n        state.hackerNewsData = action.hackerNewsData;\n        state.hackerNewsGraphData[action.key].uv = action.hackerNewsData.hits[action.key].points;\n        return state;\n      }\n\n    case hackerNewsVoteCountActionTypes.UPDATE_VOTE_COUNT_ERROR:\n      {\n        return { ...state,\n          loading: true,\n          errors: action\n        };\n      }\n    // update vote count //\n\n    case hackerNewsDeleteActionTypes.HACKER_NEWS_DELETE_DATA_REQUEST:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case hackerNewsDeleteActionTypes.HACKER_NEWS_DELETE_DATA_SUCCESS:\n      {\n        state.loading = false;\n        state.hackerNewsData.hits.splice(action.index, 1);\n        state.hackerNewsData.hackerNewsGraphData.splice(action.index, 1);\n        return state;\n      }\n\n    case hackerNewsDeleteActionTypes.HACKER_NEWS_DELETE_DATA_ERROR:\n      {\n        return { ...state,\n          loading: true,\n          errors: action\n        };\n      }\n    // update Presist data in redux state//\n\n    case hackerNewsUpdatePresistTypes.HACKER_NEWS_PERSIST_DATA_REQUEST:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case hackerNewsUpdatePresistTypes.HACKER_NEWS_PERSIST_DATA_SUCCESS:\n      {\n        state.loading = false;\n        state.hackerNewsData = action.hackerNewsData;\n        state.hackerNewsGraphData = action.hackerNewsData.hackerNewsGraphData;\n        return state;\n      }\n\n    case hackerNewsUpdatePresistTypes.HACKER_NEWS_PERSIST_DATA_ERROR:\n      {\n        return { ...state,\n          loading: true,\n          errors: action\n        };\n      }\n    // fecth user details //\n\n    case hackerNewsUserActionTypes.FETCH_USER_REQUEST:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case hackerNewsUserActionTypes.FETCH_USER_SUCCESS:\n      {\n        state.loading = false;\n        return state;\n      }\n\n    case hackerNewsUserActionTypes.FETCH_USER_ERROR:\n      {\n        return { ...state,\n          loading: true,\n          errors: action\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default hackerNewsReducer;","map":{"version":3,"sources":["/home/deepak/Documents/dk/HackerNewsReactHooks/src/store/home/reducer.js"],"names":["hackerNewsActionTypes","hackerNewsUserActionTypes","hackerNewsVoteCountActionTypes","hackerNewsDeleteActionTypes","hackerNewsUpdatePresistTypes","initialState","loading","hackerNewsData","hackerNewsGraphData","hackerNewsReducer","state","action","type","FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","data","FETCH_DATA_ERROR","errors","UPDATE_VOTE_COUNT_REQUEST","UPDATE_VOTE_COUNT_SUCCESS","key","uv","hits","points","UPDATE_VOTE_COUNT_ERROR","HACKER_NEWS_DELETE_DATA_REQUEST","HACKER_NEWS_DELETE_DATA_SUCCESS","splice","index","HACKER_NEWS_DELETE_DATA_ERROR","HACKER_NEWS_PERSIST_DATA_REQUEST","HACKER_NEWS_PERSIST_DATA_SUCCESS","HACKER_NEWS_PERSIST_DATA_ERROR","FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_ERROR"],"mappings":"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","sourcesContent":["import {\n  hackerNewsActionTypes,\n  hackerNewsUserActionTypes,\n  hackerNewsVoteCountActionTypes,\n  hackerNewsDeleteActionTypes,\n  hackerNewsUpdatePresistTypes\n} from '../constants';\n\nconst initialState = {\n  loading: true,\n  hackerNewsData: {},\n  hackerNewsGraphData: []\n};\n\nconst hackerNewsReducer = (state = initialState, action) => {\n\n  // fecth initial data from search //\n  switch (action.type) {\n    case hackerNewsActionTypes.FETCH_DATA_REQUEST: {\n      return { ...state, loading: true };\n    }\n\n    case hackerNewsActionTypes.FETCH_DATA_SUCCESS: {\n      state.loading = false;\n      state.hackerNewsData = action.data;\n      state.hackerNewsGraphData = action.data.hackerNewsGraphData;\n      return state;\n    }\n\n    case hackerNewsActionTypes.FETCH_DATA_ERROR: {\n      return { ...state, loading: true, errors: '' };\n    }\n\n    // update vote count //\n    case hackerNewsVoteCountActionTypes.UPDATE_VOTE_COUNT_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case hackerNewsVoteCountActionTypes.UPDATE_VOTE_COUNT_SUCCESS: {\n      state.loading = false;\n      state.hackerNewsData = action.hackerNewsData;\n      state.hackerNewsGraphData[action.key].uv = action.hackerNewsData.hits[action.key].points;\n      return state;\n    }\n    case hackerNewsVoteCountActionTypes.UPDATE_VOTE_COUNT_ERROR: {\n      return { ...state, loading: true, errors: action };\n    }\n\n\n    // update vote count //\n    case hackerNewsDeleteActionTypes.HACKER_NEWS_DELETE_DATA_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case hackerNewsDeleteActionTypes.HACKER_NEWS_DELETE_DATA_SUCCESS: {\n      state.loading = false;\n      state.hackerNewsData.hits.splice(action.index, 1);\n      state.hackerNewsData.hackerNewsGraphData.splice(action.index, 1);\n      return state;\n    }\n    case hackerNewsDeleteActionTypes.HACKER_NEWS_DELETE_DATA_ERROR: {\n      return { ...state, loading: true, errors: action };\n    }\n\n    // update Presist data in redux state//\n    case hackerNewsUpdatePresistTypes.HACKER_NEWS_PERSIST_DATA_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case hackerNewsUpdatePresistTypes.HACKER_NEWS_PERSIST_DATA_SUCCESS: {\n      state.loading = false;\n      state.hackerNewsData = action.hackerNewsData;\n      state.hackerNewsGraphData = action.hackerNewsData.hackerNewsGraphData;\n      return state;\n    }\n    case hackerNewsUpdatePresistTypes.HACKER_NEWS_PERSIST_DATA_ERROR: {\n      return { ...state, loading: true, errors: action };\n    }\n\n\n    // fecth user details //\n    case hackerNewsUserActionTypes.FETCH_USER_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case hackerNewsUserActionTypes.FETCH_USER_SUCCESS: {\n      state.loading = false;\n     return state;\n    }\n    case hackerNewsUserActionTypes.FETCH_USER_ERROR: {\n      return { ...state, loading: true, errors: action };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default hackerNewsReducer;\n"]},"metadata":{},"sourceType":"module"}